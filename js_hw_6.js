// ЗАВДАННЯ 1.
// Написати свою реалізацію функції isNaN.
// Умови виконання ДЗ:
// - не використовувати функції або інші матеріали які ми не вивчали;
// - не використовувати isNaN/ Number.isNaN;
// - customIsNaN має бути ідентичною за логікою до isNaN.

function customIsNaN(value) {
    if ((+value >= 0) || (+value < 0)) return false
    else return true
}
console.log('TASK 1')
// для наочності виводимо циклом різні варіанти значень для перевірки ідентичності з isNaN
for (let i of [100, 0, -5.5, '-10', true, 'qwerty', ' ', 0/0, '', undefined, null, NaN]) {
    console.log(`typeof ${i} =       ` + typeof i)
    console.log(`isNaN(${i}) =       ` + isNaN(i))
    console.log(`customIsNaN(${i}) = ` + customIsNaN(i))
    console.log('-------------------------')
}
console.log()

///////////////////////////////////////////////////////////////////////////////////////////////////
// ЗАВДАННЯ 2.
// Перевірка теорії ймовірності. Напишіть функцію яка буде генерувати певну кількість випадкових чисел в діапазоні
// від 100 до 1000 включно. Порахувати кількість парних та непарних серед них. Обчислити відсоткове співвідношення
// - чи буде воно близьке до 50%50? Приклад функції checkProbabilityTheory(count). Параметр count буде вказувати
// скільки разів буде генеруватися випадкове число.
// Умови виконання ДЗ - функція виводить наступну інформацію:
// - "Кількість згенерованих чисел": кількість чисел;
// - "Парних чисел": кількість парних чисел;
// - "Не парних чисел": кількість не парних чисел;
// - "Відсоток парних до не парних": відсотки.

function checkProbabilityTheory(count) {
    let evenQty = 0  // лічильник парних чисел
    let numbers = '', randomNumber  // для зручності демонстрації
    function getRandom(min, max) { // функція генерації числа від min до max включно
        return Math.floor(Math.random() * (max - min + 1) + min)
    }
    for (let i = 0; i < count; i++) {
        randomNumber = getRandom(100, 1000)
        numbers = numbers + randomNumber + ' '  // збираємо числа в рядок для зручності подальшого виводу
        if (randomNumber % 2 === 0) ++evenQty  // рахуємо тільки парні числа, решта - непарні
    }
        console.log(numbers)
    console.log('Кількість згенерованих чисел: ' + count)
    console.log('Парних чисел: ' + evenQty)
    console.log('Непарних чисел: ' + (count-evenQty))
    console.log('Відсоток парних до не парних: ' + (evenQty/count*100).toFixed(2) + '% / '
                                                 + (100-evenQty/count*100).toFixed(2) + '%')
    // для зручності округлюємо відсотки до 2 знаків після точки та забеспечуємо щоб їх сума завжди дорівнювала 100%
}
console.log('TASK 2')
checkProbabilityTheory(30)
console.log()

///////////////////////////////////////////////////////////////////////////////////////////////////
// ЗАВДАННЯ 3.
// Вивести на екран суму чисел від 1 до 100 включно, які не кратні 3.
// Умови виконання ДЗ:
// - не використовувати функції або інші матеріали які ми не вивчали;
// - намагайтесь робити ДЗ самостійно та не дивитися будь-які підказки.

function sum(start, end, digit){  // для варіативності діапазон та число робимо змінними
    let sum = 0
    for (let i=start; i <= end; i++){
        if (i % digit !== 0) sum += i
    }
    return sum
}
console.log('TASK 3')
console.log(sum(1, 100, 3))
console.log()

///////////////////////////////////////////////////////////////////////////////////////////////////
// *** ДОДАТКОВА ЗАДАЧА.
// Напишіть функцію на JavaScript, яка приймає рядок, виокремлює з нього всі цілі числа (ігноруючи дробові числа),
// перетворює їх з текстового формату в числовий  та обчислює їхню загальну суму.
// Вимоги:
// 1. Функція повинна ітерувати кожен символ у вхідному рядку.
// 2. Використовуйте цикл для перегляду кожного символу та збору повних цілочисельних значень.
// 3. Ігноруйте нечислові символи та дробові числа під час обрахунку суми цілих чисел (якщо у нас зустрічається
// такий запис 123.23 - то сума має бути 146, 123+23=146).
// 4. Після визначення кожного цілого числа додайте його до загальної суми.
// 5. Не використовувати масиви та регулярні вирази для рішення.
// ПРИКЛАД: console.log(sumIntegersInString("123.45px-67 8.9")); // Виведе 118, сумуючи 123, 45, -67, 8 та 9

function sumIntegersInString(str) {
    let number = '', sum = 0
    for (let i=0; i < str.length + 1; i++) {
        // перевіряємо чи є символ цифрою, через його належність до діапазону від "0" до "9" в кодах Юнікод
        if ((str.charCodeAt(i) >= "0".charCodeAt(0)) && (str.charCodeAt(i) <= "9".charCodeAt(0))) {
            if ((!number) && (str[i-1]) === '-') number+= '-'  // враховуєм '-', якщо він є перед першою цифрою числа
            number += str[i]
        }
        else {
            if (number) console.log(number)  // для наочності виводимо підрядки, які розпізнані як числа
            sum += +number
            number = ''
        }
    }
    return sum
}
console.log('TASK EXTRA')
console.log(sumIntegersInString("123.45px-67 8.9"))

